-- Drop tables, sequences and procedures.

DROP TABLE ROLE_TBL;
DROP TABLE PURCHASE;
DROP TABLE MATCH;
DROP TABLE CHAMPION;
DROP TABLE ACCOUNT;
DROP TABLE MYTHICITEM;
DROP TABLE NONMYTHIC;
DROP TABLE PRICECHANGE;
DROP TABLE ITEM;
DROP SEQUENCE ACCOUNT_SEQ;
DROP SEQUENCE CHAMPION_SEQ;
DROP SEQUENCE MATCH_SEQ;
DROP SEQUENCE ITEM_SEQ;
DROP SEQUENCE PURCHASE_SEQ;
DROP SEQUENCE PRICECHANGE_SEQ;
DROP PROCEDURE ADD_MATCH;
DROP PROCEDURE CREATE_ACCOUNT;
DROP PROCEDURE ADD_ITEM;
DROP PROCEDURE MAKE_PURCHASE;
DROP PROCEDURE ADD_MATCH_30;
DROP VIEW PLAYER_RANKING;
DROP VIEW BEST_CHAMPIONS;

--TABLES
--Replace this with your table creations.

CREATE TABLE ROLE_TBL (
ROLE_ID CHAR(1) PRIMARY KEY,
ROLE_LABEL VARCHAR(10) NOT NULL
);

CREATE TABLE ACCOUNT (
ACCOUNT_ID DECIMAL(12) NOT NULL,
ACCOUNTREGION VARCHAR(8) NOT NULL,
LOLACCOUNT VARCHAR(32) NOT NULL,
ACCOUNTEMAIL VARCHAR(128) NOT NULL,
ENCRYPTEDPASSWORD VARCHAR(128) NOT NULL,
ACCOUNTNAME VARCHAR(64) NOT NULL UNIQUE,
CONSTRAINT ACCOUNT_PK PRIMARY KEY (ACCOUNT_ID));

CREATE TABLE CHAMPION (
CHAMPION_ID DECIMAL(12) NOT NULL,
CHAMPIONATTACK DECIMAL(3) NOT NULL,
CHAMPIONHEALTH DECIMAL(5) NOT NULL,
CHAMPIONPEAK CHAR(1) NOT NULL,
CHAMPIONTYPE CHAR(3) NOT NULL,
CHAMPIONROLE CHAR(1) NOT NULL,
CHAMPIONNAME VARCHAR(30) NOT NULL,
CONSTRAINT CHAMPION_PK PRIMARY KEY (CHAMPION_ID));

-- Only allow select values for champion type, peak and role.
ALTER TABLE CHAMPION
ADD CONSTRAINT CHECK_CHAMPION_TYPE CHECK(CHAMPIONTYPE IN ('TNK','FGH','MGE','ASN','MRK','ENC'))
ADD CONSTRAINT CHECK_CHAMPION_ROLE CHECK(CHAMPIONROLE IN ('T','J','M','A','S'))
ADD CONSTRAINT CHECK_CHAMPION_PEAK CHECK(CHAMPIONPEAK IN ('E','M','L'));

CREATE TABLE MATCH (
MATCH_ID DECIMAL(12) NOT NULL,
CHAMPION_ID DECIMAL(12) NOT NULL,
ACCOUNT_ID DECIMAL(12) NOT NULL,
MATCHROLE CHAR(1) NOT NULL,
MATCHGOLD DECIMAL(7) DEFAULT ON NULL 0,
MATCHCS DECIMAL(4) DEFAULT ON NULL 0,
MATCHASSISTS DECIMAL(2) DEFAULT ON NULL 0,
MATCHKILLS DECIMAL(2) DEFAULT ON NULL 0,
MATCHDEATHS DECIMAL(2) DEFAULT ON NULL 0,
WINORLOSE CHAR(1) NOT NULL,
MATCHDATE DATE DEFAULT ON NULL TRUNC(SYSDATE),
CONSTRAINT MATCH_FK1 FOREIGN KEY (CHAMPION_ID) REFERENCES CHAMPION,
CONSTRAINT MATCH_FK2 FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT,
CONSTRAINT MATCH_PK1 PRIMARY KEY (MATCH_ID));

CREATE TABLE ITEM (
ITEM_ID DECIMAL(12) NOT NULL,
ITEMMYTHIC CHAR(1) NOT NULL,
ITEMCOST DECIMAL(5) NOT NULL,
ITEMTYPE CHAR(1) NOT NULL,
ITEMACTIVE CHAR(1) NOT NULL,
ITEMNAME VARCHAR(30) NOT NULL,
CONSTRAINT ITEM_PK PRIMARY KEY (ITEM_ID));

CREATE TABLE MYTHICITEM (
ITEM_ID DECIMAL(12) NOT NULL,
MYTHICPASSIVE VARCHAR(128) NOT NULL,
CONSTRAINT MYTHICITEM_FK1 FOREIGN KEY (ITEM_ID) REFERENCES ITEM,
CONSTRAINT MYTHICITEM_PK PRIMARY KEY (ITEM_ID));

CREATE TABLE NONMYTHIC (
ITEM_ID DECIMAL(12) NOT NULL,
CONSUMABLE CHAR(1) NOT NULL,
CONSTRAINT NONMYTHIC_FK1 FOREIGN KEY (ITEM_ID) REFERENCES ITEM,
CONSTRAINT NONMYTHIC_PK PRIMARY KEY (ITEM_ID));

CREATE TABLE PURCHASE (
PURCHASE_ID DECIMAL(12) NOT NULL,
MATCH_ID DECIMAL(12),
CHAMPION_ID DECIMAL(12),
ITEM_ID DECIMAL(12),
CONSTRAINT PURCHASE_FK1 FOREIGN KEY (MATCH_ID) REFERENCES MATCH,
CONSTRAINT PURCHASE_FK2 FOREIGN KEY (CHAMPION_ID) REFERENCES CHAMPION,
CONSTRAINT PURCHASE_FK3 FOREIGN KEY (ITEM_ID) REFERENCES ITEM,
CONSTRAINT PURCHASE_PK PRIMARY KEY (PURCHASE_ID));

CREATE TABLE PRICECHANGE (
PRICECHANGE_ID DECIMAL(12) NOT NULL,
ITEM_ID DECIMAL(12) NOT NULL,
OLDITEMCOST DECIMAL(5) NOT NULL,
NEWITEMCOST DECIMAL(5) NOT NULL,
CHANGEDATE DATE NOT NULL,
CONSTRAINT PRICECHANGE_PK PRIMARY KEY (PRICECHANGE_ID),
CONSTRAINT PRICECHANGE_FK FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ITEM_ID));

--SEQUENCES
--Replace this with your sequence creations.

CREATE SEQUENCE ACCOUNT_SEQ START WITH 1;
CREATE SEQUENCE CHAMPION_SEQ START WITH 1;
CREATE SEQUENCE MATCH_SEQ START WITH 1;
CREATE SEQUENCE ITEM_SEQ START WITH 1;
CREATE SEQUENCE PURCHASE_SEQ START WITH 1;
CREATE SEQUENCE PRICECHANGE_SEQ START WITH 1;

--INDEXES
--Replace this with your index creations.

-- Query driven indexes.

CREATE UNIQUE INDEX Champion_Idx ON CHAMPION(CHAMPIONNAME);
CREATE UNIQUE INDEX LoLAccount_Idx ON ACCOUNT(LOLACCOUNT);
CREATE UNIQUE INDEX Item_Idx ON ITEM(ITEMNAME);

-- Foreign key indexes.

CREATE INDEX MatchChamp_Idx ON MATCH(CHAMPION_ID);
CREATE INDEX MatchAcc_Idx ON MATCH(ACCOUNT_ID);

CREATE INDEX PurchaseMatch_Idx ON PURCHASE(MATCH_ID);
CREATE INDEX PurchaseChamp_Idx ON PURCHASE(CHAMPION_ID);
CREATE INDEX PurchaseItem_Idx ON PURCHASE(ITEM_ID);

--STORED PROCEDURES
--Replace this with your stored procedure definitions.

CREATE OR REPLACE PROCEDURE CREATE_ACCOUNT 
(REGION IN VARCHAR, LOLACCOUNT IN VARCHAR, EMAIL IN VARCHAR, ENCRYPTEDPASSWORD IN VARCHAR, NAME IN VARCHAR)
AS
BEGIN
    IF SUBSTR(UPPER(EMAIL),LENGTH(EMAIL)-3,4) != '.COM' THEN
    RAISE_APPLICATION_ERROR(-20001,'Email must end with .com.');
    END IF;

    INSERT INTO ACCOUNT(ACCOUNT_ID,ACCOUNTREGION,LOLACCOUNT,ACCOUNTEMAIL,ENCRYPTEDPASSWORD,ACCOUNTNAME)
    VALUES (ACCOUNT_SEQ.NEXTVAL,REGION,LOLACCOUNT,EMAIL,ENCRYPTEDPASSWORD,NAME);
END;
/

CREATE OR REPLACE PROCEDURE ADD_ITEM 
(MYTHIC IN VARCHAR, COST IN DECIMAL, TYPE IN VARCHAR, ACTIVE IN VARCHAR, NAME IN VARCHAR, PASSIVE_OR_CONSUMABLE IN VARCHAR)
AS
BEGIN

    IF MYTHIC = 'Y' THEN
        INSERT INTO ITEM(ITEM_ID,ITEMMYTHIC,ITEMCOST,ITEMTYPE,ITEMACTIVE,ITEMNAME)
        VALUES (ITEM_SEQ.NEXTVAL,'Y',COST,TYPE,ACTIVE,NAME);
        
        INSERT INTO MYTHICITEM(ITEM_ID,MYTHICPASSIVE)
        VALUES(ITEM_SEQ.CURRVAL,PASSIVE_OR_CONSUMABLE);
    ELSE
        INSERT INTO ITEM(ITEM_ID,ITEMMYTHIC,ITEMCOST,ITEMTYPE,ITEMACTIVE,ITEMNAME)
        VALUES (ITEM_SEQ.NEXTVAL,'N',COST,TYPE,ACTIVE,NAME);
        
        INSERT INTO NONMYTHIC(ITEM_ID,CONSUMABLE)
        VALUES(ITEM_SEQ.CURRVAL,PASSIVE_OR_CONSUMABLE);
    END IF;
    
END;
/

CREATE OR REPLACE PROCEDURE ADD_MATCH 
(CHAMPION_NAME IN VARCHAR, LOL_NAME IN VARCHAR, ROLE_NAME IN VARCHAR, GOLD IN DECIMAL, CS IN DECIMAL, ASSISTS IN DECIMAL, KILLS IN DECIMAL, DEATHS IN DECIMAL, WOL IN VARCHAR)
IS
    CHAMPIONID DECIMAL(12);
    ACCOUNTID DECIMAL(12);
    ROLEABV CHAR(1);
    WOLABV CHAR(1);
BEGIN
    SELECT CHAMPION_ID
    INTO CHAMPIONID
    FROM CHAMPION
    WHERE CHAMPIONNAME = CHAMPION_NAME;
    
    SELECT ACCOUNT_ID
    INTO ACCOUNTID
    FROM ACCOUNT
    WHERE LOLACCOUNT = LOL_NAME;
    
    ROLEABV := SUBSTR(UPPER(ROLE_NAME),1,1);
    
    WOLABV := SUBSTR(UPPER(WOL),1,1);

    INSERT INTO MATCH(MATCH_ID,CHAMPION_ID,ACCOUNT_ID,MATCHROLE,MATCHGOLD,MATCHCS,MATCHASSISTS,MATCHKILLS,MATCHDEATHS,WINORLOSE,MATCHDATE)
    VALUES (MATCH_SEQ.NEXTVAL,CHAMPIONID,ACCOUNTID,ROLEABV,GOLD,CS,ASSISTS,KILLS,DEATHS,WOLABV,TRUNC(SYSDATE));
END;
/

CREATE OR REPLACE PROCEDURE MAKE_PURCHASE
(MATCH IN DECIMAL, CHAMPION_NAME IN VARCHAR, ITEM_NAME IN VARCHAR)
IS
    CHAMPIONID DECIMAL(12);
    ITEMID DECIMAL(12);
BEGIN
    SELECT CHAMPION_ID
    INTO CHAMPIONID
    FROM CHAMPION
    WHERE CHAMPIONNAME = CHAMPION_NAME;
    
    SELECT ITEM_ID
    INTO ITEMID
    FROM ITEM
    WHERE ITEMNAME = ITEM_NAME;
    
    INSERT INTO PURCHASE(PURCHASE_ID,MATCH_ID,CHAMPION_ID,ITEM_ID)
    VALUES (PURCHASE_SEQ.nextval, MATCH, CHAMPIONID,ITEMID);
END;
/

CREATE OR REPLACE PROCEDURE ADD_MATCH_30 
(CHAMPION_NAME IN VARCHAR, LOL_NAME IN VARCHAR, ROLE_NAME IN VARCHAR, GOLD IN DECIMAL, CS IN DECIMAL, ASSISTS IN DECIMAL, KILLS IN DECIMAL, DEATHS IN DECIMAL, WOL IN VARCHAR)
IS
    CHAMPIONID DECIMAL(12);
    ACCOUNTID DECIMAL(12);
    ROLEABV CHAR(1);
    WOLABV CHAR(1);
BEGIN
    SELECT CHAMPION_ID
    INTO CHAMPIONID
    FROM CHAMPION
    WHERE CHAMPIONNAME = CHAMPION_NAME;
    
    SELECT ACCOUNT_ID
    INTO ACCOUNTID
    FROM ACCOUNT
    WHERE LOLACCOUNT = LOL_NAME;
    
    ROLEABV := SUBSTR(UPPER(ROLE_NAME),1,1);
    
    WOLABV := SUBSTR(UPPER(WOL),1,1);

    INSERT INTO MATCH(MATCH_ID,CHAMPION_ID,ACCOUNT_ID,MATCHROLE,MATCHGOLD,MATCHCS,MATCHASSISTS,MATCHKILLS,MATCHDEATHS,WINORLOSE,MATCHDATE)
    VALUES (MATCH_SEQ.NEXTVAL,CHAMPIONID,ACCOUNTID,ROLEABV,GOLD,CS,ASSISTS,KILLS,DEATHS,WOLABV,TRUNC(SYSDATE+30));
END;
/

--INSERTS
--Replace this with the inserts necessary to populate your tables.
--Some of these inserts will come from executing the stored procedures.

BEGIN

    INSERT INTO ROLE_TBL VALUES ('T','Top');
    INSERT INTO ROLE_TBL VALUES ('J','Jungle');
    INSERT INTO ROLE_TBL VALUES ('M','Mid');
    INSERT INTO ROLE_TBL VALUES ('A','ADC');
    INSERT INTO ROLE_TBL VALUES ('S','Support');

	CREATE_ACCOUNT('NA','JeffsCat','MeowMeow99@gmail.com','c@tm@n$12','CoolCat');
	CREATE_ACCOUNT('NA','jakeSaw','sawtercrew@aol.com','00p00_','TheSaw');
	CREATE_ACCOUNT('NA','Crumbs','Crumbs@yahoo.com','leCru_m#s','CrumbsLoL');
	CREATE_ACCOUNT('KR','Faker','Faker@SKT.com','ITHeG0@t$','SKTFaker');
	CREATE_ACCOUNT('NA','LoLHeckler','AndrewWOuellette@BU.com','Ip@ssw0rd$','LoLHecklerAnalytics');

	INSERT INTO CHAMPION VALUES (CHAMPION_SEQ.nextval,40,650,'M','ASN','M','Katarina');
	INSERT INTO CHAMPION VALUES (CHAMPION_SEQ.nextval,70,450,'L','MRK','A','Vayne');
	INSERT INTO CHAMPION VALUES (CHAMPION_SEQ.nextval,50,700,'E','TNK','S','Thresh');
	INSERT INTO CHAMPION VALUES (CHAMPION_SEQ.nextval,70,700,'E','FGH','T','Riven');
	INSERT INTO CHAMPION VALUES (CHAMPION_SEQ.nextval,60,590,'E','ASN','M','Qiyana');
    INSERT INTO CHAMPION VALUES (CHAMPION_SEQ.nextval,80,700,'E','FGH','J','Lee Sin');
	
	ADD_ITEM('Y',2800,'O','Y','Prowlers Claw','+5 Damage');
	ADD_ITEM('N',1100,'S','N','Lucidity Boots','N');
	ADD_ITEM('N',1100,'O','N','Serrated Dirk','N');
	ADD_ITEM('N',50,'D','Y','Health Potion','Y');
	ADD_ITEM('Y',2800,'O','N','Duskblade','+5 Armor reduction');
    
    ADD_MATCH('Katarina','LoLHeckler','m',30000,223,2,9,5,'L');
    ADD_MATCH('Vayne','LoLHeckler','adc',30000,274,2,18,5,'L');
    ADD_MATCH('Thresh','LoLHeckler','s',16000,104,2,7,5,'L');
    ADD_MATCH('Riven','LoLHeckler','t',12000,104,2,5,5,'L');
    
    ADD_MATCH('Vayne','LoLHeckler','adc',12000,104,2,5,10,'L');
    ADD_MATCH('Thresh','LoLHeckler','s',12000,104,2,5,14,'L');
    ADD_MATCH('Riven','LoLHeckler','t',12000,104,2,5,14,'L');
    ADD_MATCH('Katarina','LoLHeckler','m',30000,223,2,9,5,'L');
    
    ADD_MATCH('Vayne','LoLHeckler','adc',24000,104,2,18,5,'w');
    ADD_MATCH('Thresh','LoLHeckler','s',12000,104,2,5,17,'w');
    ADD_MATCH('Riven','LoLHeckler','t',28000,184,2,15,5,'w');
    ADD_MATCH('Katarina','Faker','m',30000,223,2,9,5,'w');
	
    ADD_MATCH('Katarina','JeffsCat','m',30000,223,2,9,5,'L');
    ADD_MATCH('Vayne','Crumbs','adc',30000,274,2,18,5,'L');
    ADD_MATCH('Thresh','LoLHeckler','s',16000,104,2,7,5,'L');
    ADD_MATCH('Riven','Faker','t',12000,104,2,5,5,'L');
    
    ADD_MATCH('Vayne','JeffsCat','adc',12000,104,2,5,10,'L');
    ADD_MATCH('Thresh','Faker','s',12000,104,2,5,14,'L');
    ADD_MATCH('Katarina','Crumbs','m',30000,223,2,9,5,'L');
    
    ADD_MATCH('Vayne','Crumbs','adc',24000,104,2,18,5,'w');
    ADD_MATCH('Thresh','Faker','s',12000,104,2,5,17,'w');
    ADD_MATCH('Riven','JeffsCat','t',28000,184,2,15,5,'w');
    ADD_MATCH('Katarina','LoLHeckler','m',30000,223,2,9,5,'w');
    
	ADD_MATCH('Qiyana','LoLHeckler','Mid',22000,183,3,12,4,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Prowlers Claw');
	
	ADD_MATCH('Qiyana','LoLHeckler','Mid',27000,163,5,10,4,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Prowlers Claw');
	

    
	ADD_MATCH('Qiyana','LoLHeckler','Middle',10000,105,5,8,5,'Loser');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Prowlers Claw');
	
	ADD_MATCH('Qiyana','LoLHeckler','Mid lane',30000,216,7,19,3,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
    
	ADD_MATCH('Qiyana','LoLHeckler','Mid lane',30000,216,7,19,3,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
	
	ADD_MATCH('Qiyana','LoLHeckler','TOP',25000,250,3,13,6,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
    
	ADD_MATCH('Qiyana','LoLHeckler','TOP',27000,163,5,10,4,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Prowlers Claw');
	
	ADD_MATCH('Qiyana','LoLHeckler','Middle',9000,70,3,2,6,'Loser');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
    
    ADD_MATCH('Qiyana','LoLHeckler','Bot',25000,120,8,10,7,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
    ADD_MATCH('Qiyana','LoLHeckler','Bot',9000,75,1,1,7,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
    
    ADD_MATCH('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');
    ADD_MATCH('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');
    ADD_MATCH('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');
    ADD_MATCH('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');
    ADD_MATCH('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');
    
	COMMIT;
	
END;
/

--TRIGGERS
--Replace this with your history table trigger.

CREATE OR REPLACE TRIGGER PRICE_CHANGE_TG
BEFORE UPDATE OF ITEMCOST ON ITEM
FOR EACH ROW
BEGIN
    INSERT INTO PRICECHANGE(PRICECHANGE_ID, ITEM_ID, OLDITEMCOST, NEWITEMCOST, CHANGEDATE)
    VALUES (PRICECHANGE_SEQ.nextval, :NEW.ITEM_ID, :OLD.ITEMCOST, :NEW.ITEMCOST, TRUNC(SYSDATE));
END;
/

--QUERIES
--Replace this with your queries.

-- Views for third query.
CREATE VIEW PLAYER_RANKING AS 
SELECT LOLACCOUNT, TO_CHAR(WINS/GAMES*100,'999') || '%' AS WIN_RATE
FROM
(SELECT LOLACCOUNT, COUNT(*) AS WINS
FROM MATCH
JOIN ACCOUNT USING (ACCOUNT_ID)
WHERE WINORLOSE = 'W'
GROUP BY LOLACCOUNT) 
JOIN
(SELECT LOLACCOUNT, COUNT(*) AS GAMES
FROM MATCH
JOIN ACCOUNT USING (ACCOUNT_ID)
GROUP BY LOLACCOUNT)
USING (LOLACCOUNT)
ORDER BY WIN_RATE DESC;

CREATE VIEW BEST_CHAMPIONS AS 
SELECT LOLACCOUNT, CHAMPIONNAME, TO_CHAR(WINS/GAMES*100,'999') || '%' AS WIN_RATE
FROM
(SELECT LOLACCOUNT, CHAMPIONNAME, COUNT(*) AS WINS
FROM MATCH
JOIN ACCOUNT USING (ACCOUNT_ID)
JOIN CHAMPION USING (CHAMPION_ID)
WHERE WINORLOSE = 'W'
GROUP BY (LOLACCOUNT, CHAMPIONNAME))
JOIN
(SELECT LOLACCOUNT, CHAMPIONNAME, COUNT(*) AS GAMES
FROM MATCH
JOIN ACCOUNT USING (ACCOUNT_ID)
JOIN CHAMPION USING (CHAMPION_ID)
GROUP BY (LOLACCOUNT, CHAMPIONNAME))
USING (LOLACCOUNT,CHAMPIONNAME)
WHERE (WINS/GAMES)*100 >= 50
ORDER BY LOLACCOUNT, WIN_RATE DESC;

-- First query.

SELECT TO_CHAR(WINS/GAMES*100,'999') || '%' AS WIN_RATE
FROM
(SELECT COUNT(*) AS WINS
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
WHERE MATCH.CHAMPION_ID = (SELECT CHAMPION_ID FROM CHAMPION WHERE CHAMPIONNAME = 'Qiyana')
AND MATCH.ACCOUNT_ID = (SELECT ACCOUNT_ID FROM ACCOUNT WHERE LOLACCOUNT = 'LoLHeckler')
AND PURCHASE.ITEM_ID = (SELECT ITEM_ID FROM ITEM WHERE ITEMNAME = 'Prowlers Claw')
AND WINORLOSE = 'W') 
,
(SELECT COUNT(*) AS GAMES
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
WHERE MATCH.CHAMPION_ID = (SELECT CHAMPION_ID FROM CHAMPION WHERE CHAMPIONNAME = 'Qiyana')
AND MATCH.ACCOUNT_ID = (SELECT ACCOUNT_ID FROM ACCOUNT WHERE LOLACCOUNT = 'LoLHeckler')
AND PURCHASE.ITEM_ID = (SELECT ITEM_ID FROM ITEM WHERE ITEMNAME = 'Prowlers Claw'));

-- Second query.

SELECT (MATCHES_PLAYED - MATCHES_MYTHIC_BOUGHT) AS MATCHES_MYTHIC_SKIPPED, MATCHES_PLAYED
FROM
(SELECT COUNT(*) AS MATCHES_MYTHIC_BOUGHT
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
WHERE ITEM_ID IN (SELECT ITEM_ID FROM ITEM WHERE ITEMMYTHIC = 'Y')
AND MATCH.ACCOUNT_ID = (SELECT ACCOUNT_ID FROM ACCOUNT WHERE LOLACCOUNT = 'LoLHeckler'))
,
(SELECT COUNT(*) AS MATCHES_PLAYED
FROM MATCH
WHERE MATCH.ACCOUNT_ID = (SELECT ACCOUNT_ID FROM ACCOUNT WHERE LOLACCOUNT = 'LoLHeckler'));

-- Third query.

SELECT LOLACCOUNT,CHAMPIONNAME, WIN_RATE
FROM BEST_CHAMPIONS
WHERE LOLACCOUNT IN (
SELECT LOLACCOUNT
FROM PLAYER_RANKING
FETCH FIRST 2 ROWS ONLY);

-- History & Data visualization queries.

-- Item price change

UPDATE ITEM
SET ITEMCOST = 3200
WHERE ITEMNAME = 'Prowlers Claw';

-- Matches after price change.

BEGIN

    ADD_MATCH_30('Katarina','LoLHeckler','m',30000,223,2,9,5,'L');
    ADD_MATCH_30('Vayne','LoLHeckler','adc',30000,274,2,18,5,'L');
    ADD_MATCH_30('Thresh','LoLHeckler','s',16000,104,2,7,5,'L');
    ADD_MATCH_30('Riven','LoLHeckler','t',12000,104,2,5,5,'L');
    
    ADD_MATCH_30('Vayne','LoLHeckler','adc',12000,104,2,5,10,'L');
    ADD_MATCH_30('Thresh','LoLHeckler','s',12000,104,2,5,14,'L');
    ADD_MATCH_30('Riven','LoLHeckler','t',12000,104,2,5,14,'L');
    ADD_MATCH_30('Katarina','LoLHeckler','m',30000,223,2,9,5,'L');
    
    ADD_MATCH_30('Vayne','LoLHeckler','adc',24000,104,2,18,5,'w');
    ADD_MATCH_30('Thresh','LoLHeckler','s',12000,104,2,5,17,'w');
    ADD_MATCH_30('Riven','LoLHeckler','t',28000,184,2,15,5,'w');
    ADD_MATCH_30('Katarina','Faker','m',30000,223,2,9,5,'w');
	
    ADD_MATCH_30('Katarina','JeffsCat','m',30000,223,2,9,5,'L');
    ADD_MATCH_30('Vayne','Crumbs','adc',30000,274,2,18,5,'L');
    ADD_MATCH_30('Thresh','LoLHeckler','s',16000,104,2,7,5,'L');
    ADD_MATCH_30('Riven','Faker','t',12000,104,2,5,5,'L');
    
    ADD_MATCH_30('Vayne','JeffsCat','adc',12000,104,2,5,10,'L');
    ADD_MATCH_30('Thresh','Faker','s',12000,104,2,5,14,'L');
    ADD_MATCH_30('Katarina','Crumbs','m',30000,223,2,9,5,'L');
    
    ADD_MATCH_30('Vayne','Crumbs','adc',24000,104,2,18,5,'w');
    ADD_MATCH_30('Thresh','Faker','s',12000,104,2,5,17,'w');
    ADD_MATCH_30('Riven','JeffsCat','t',28000,184,2,15,5,'w');
    ADD_MATCH_30('Katarina','LoLHeckler','m',30000,223,2,9,5,'w');
    
	ADD_MATCH_30('Qiyana','LoLHeckler','Mid',22000,183,3,12,4,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
	
	ADD_MATCH_30('Qiyana','LoLHeckler','Mid',27000,163,5,10,4,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
	

    
	ADD_MATCH_30('Qiyana','LoLHeckler','Middle',10000,105,5,8,5,'Loser');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Prowlers Claw');
	
	ADD_MATCH_30('Qiyana','LoLHeckler','Mid lane',30000,216,7,19,3,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
    
	ADD_MATCH_30('Qiyana','LoLHeckler','Mid lane',30000,216,7,19,3,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
	
	ADD_MATCH_30('Qiyana','LoLHeckler','TOP',25000,250,3,13,6,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
    
	ADD_MATCH_30('Qiyana','LoLHeckler','TOP',27000,163,5,10,4,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Duskblade');
	
	ADD_MATCH_30('Qiyana','LoLHeckler','Middle',9000,70,3,2,6,'Loser');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Prowlers Claw');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Health Potion');
    
    ADD_MATCH_30('Qiyana','LoLHeckler','Bot',25000,120,8,10,7,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
    ADD_MATCH_30('Qiyana','LoLHeckler','Bot',9000,75,1,1,7,'Win');
    MAKE_PURCHASE(MATCH_SEQ.currval,'Qiyana','Serrated Dirk');
    
    ADD_MATCH_30('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Prowlers Claw');
    ADD_MATCH_30('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');
    ADD_MATCH_30('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');
    ADD_MATCH_30('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');
    ADD_MATCH_30('Riven','Faker','t',12000,104,2,5,5,'W');
	MAKE_PURCHASE(MATCH_SEQ.currval,'Riven','Duskblade');

END;
/

-- History queries

-- Item popularity before and after

-- Before

SELECT TO_CHAR(BOUGHT/MATCHES*100,'999') || '%' AS ITEM_POPULARITY_BEFORE
FROM
(SELECT COUNT(*) AS BOUGHT
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
JOIN ITEM USING (ITEM_ID)
WHERE ITEMNAME = 'Prowlers Claw'
AND MATCHDATE <= (SELECT CHANGEDATE FROM PRICECHANGE))
,
(SELECT COUNT(*) AS MATCHES
FROM MATCH
WHERE MATCHDATE <= (SELECT CHANGEDATE FROM PRICECHANGE));

-- After

SELECT TO_CHAR(BOUGHT/MATCHES*100,'999') || '%' AS ITEM_POPULARITY_AFTER
FROM
(SELECT COUNT(*) AS BOUGHT
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
JOIN ITEM USING (ITEM_ID)
WHERE ITEMNAME = 'Prowlers Claw'
AND MATCHDATE > (SELECT CHANGEDATE FROM PRICECHANGE))
,
(SELECT COUNT(*) AS MATCHES
FROM MATCH
WHERE MATCHDATE > (SELECT CHANGEDATE FROM PRICECHANGE));

-- Item win-rate before and after

-- Before

SELECT TO_CHAR(WINS/GAMES*100,'999') || '%' AS ITEM_WIN_RATE_BEFORE
FROM
(SELECT COUNT(*) AS WINS
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
JOIN ITEM USING (ITEM_ID)
JOIN PRICECHANGE USING (ITEM_ID)
WHERE ITEM_ID = (SELECT ITEM_ID FROM ITEM WHERE ITEMNAME = 'Prowlers Claw')
AND MATCHDATE <= CHANGEDATE
AND WINORLOSE = 'W') 
,
(SELECT COUNT(*) AS GAMES
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
JOIN ITEM USING (ITEM_ID)
JOIN PRICECHANGE USING (ITEM_ID)
WHERE ITEM_ID = (SELECT ITEM_ID FROM ITEM WHERE ITEMNAME = 'Prowlers Claw')
AND MATCHDATE <= CHANGEDATE);

-- After

SELECT TO_CHAR(WINS/GAMES*100,'999') || '%' AS ITEM_WIN_RATE_BEFORE
FROM
(SELECT COUNT(*) AS WINS
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
JOIN ITEM USING (ITEM_ID)
JOIN PRICECHANGE USING (ITEM_ID)
WHERE ITEM_ID = (SELECT ITEM_ID FROM ITEM WHERE ITEMNAME = 'Prowlers Claw')
AND MATCHDATE > CHANGEDATE
AND WINORLOSE = 'W') 
,
(SELECT COUNT(*) AS GAMES
FROM MATCH
JOIN PURCHASE USING (MATCH_ID)
JOIN ITEM USING (ITEM_ID)
JOIN PRICECHANGE USING (ITEM_ID)
WHERE ITEM_ID = (SELECT ITEM_ID FROM ITEM WHERE ITEMNAME = 'Prowlers Claw')
AND MATCHDATE > CHANGEDATE);

-- Data Visualization queries

-- Role Popularity

SELECT ROLE_LABEL AS ROLE, COUNT(MATCH_ID) AS MATCHES_PLAYED
FROM CHAMPION
JOIN ROLE_TBL ON ROLE_TBL.ROLE_ID = CHAMPION.CHAMPIONROLE
LEFT JOIN MATCH USING (CHAMPION_ID)
GROUP BY ROLE_LABEL
ORDER BY COUNT(MATCH_ID) DESC;

-- Player Performance

SELECT MATCH_ID,
    SUM(CASE
        WHEN MATCH.WINORLOSE = 'L' THEN -1
        ELSE 1
    END)OVER(ORDER BY MATCH_ID) AS SUM
FROM MATCH
JOIN ACCOUNT USING (ACCOUNT_ID)
WHERE LOLACCOUNT = 'LoLHeckler';
